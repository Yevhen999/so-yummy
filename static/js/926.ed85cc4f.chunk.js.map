{"version":3,"file":"static/js/926.ed85cc4f.chunk.js","mappings":"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","sources":["components/ErrorImageContainer/ErrorImageContainer.styled.js","components/ErrorImageContainer/ErrorImageContainer.jsx","components/PreviewCategories/PreviewCategories.styled.js","components/RecipePage/RecipePageHero/RecipePageHero.styled.js","components/RecipePage/RecipeBtnFavorite/RecipeBtnFavorite.styled.js","components/RecipePage/RecipeBtnFavorite/RecipeBtnFavorite.jsx","components/RecipePage/RecipePageHero/RecipePageHero.jsx","components/RecipePage/RecipePreparation/RecipePreparation.styled.js","components/RecipePage/RecipePreparation/RecipePreparation.jsx","components/RecipePage/RecipeInngredientsItem/RecipeInngredientsItem.styled.js","components/RecipePage/RecipeInngredientsItem/RecipeInngredientsItem.jsx","pages/Recipe/Recipe.jsx","pages/Recipe/Recipe.styled.js","redux/favorites/favoritesSelectors.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ErrorImage = styled.picture`\n  display: block;\n  margin-bottom: 24px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 208px;\n  height: 133px;\n\n  @media screen and (min-width: ${props => props.theme.breakpoints.tab}) {\n    width: 350px;\n    height: 225px;\n    margin-bottom: 32px;\n  }\n`;\n","import imageErrorMob from '../../img/search-any-mob.png';\nimport imageErrorMobRetina from '../../img/search-any-mob@2x.png';\nimport imageErrorTab from '../../img/search-any-tablet.png';\nimport imageErrorTabRetina from '../../img/search-any-tablet@2x.png';\nimport imageErrorDesk from '../../img/search-any-desktop.png';\nimport imageErrorDeskRetina from '../../img/search-any-desktop@2x.png';\nimport { ErrorMessage } from 'components/PreviewCategories/PreviewCategories.styled';\nimport { ErrorImage } from './ErrorImageContainer.styled';\n\nexport const ErrorImageContainer = ({ title }) => {\n  return (\n    <>\n      <ErrorImage>\n        <source\n          srcSet={`${imageErrorDesk} 1440w, ${imageErrorDeskRetina} 2880w`}\n          media=\"(min-width: 1440px)\"\n          sizes=\"(min-width: 1440px) 1440px\"\n        />\n        <source\n          srcSet={`${imageErrorTab} 768w, ${imageErrorTabRetina} 1536w`}\n          media=\"(min-width: 768px)\"\n          sizes=\"(min-width: 768px) 768px\"\n        />\n        <source\n          srcSet={`${imageErrorMob} 375w, ${imageErrorMobRetina} 750w`}\n          media=\"(max-width: 767px)\"\n          sizes=\"(max-width: 767px) 375px\"\n        />\n        <img src={`${imageErrorMob} 375w`} alt=\"there are no recipes\" />\n      </ErrorImage>\n      <ErrorMessage>{title}</ErrorMessage>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MainList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n  margin-bottom: 40px;\n\n  @media screen and (min-width: ${props => props.theme.breakpoints.tab}) {\n    gap: 50px;\n    margin-bottom: 32px;\n  }\n\n  @media screen and (min-width: ${props => props.theme.breakpoints.desk}) {\n    gap: 100px;\n    margin-bottom: 14px;\n  }\n`;\n\nexport const TitleList = styled.p`\n  font-weight: 600;\n  font-size: 28px;\n  line-height: 1;\n  letter-spacing: -0.02em;\n  color: ${props => props.theme.color.title};\n  margin-bottom: 32px;\n\n  @media screen and (min-width: ${props => props.theme.breakpoints.tab}) {\n    font-size: 44px;\n    margin-bottom: 40px;\n  }\n\n  @media screen and (min-width: ${props => props.theme.breakpoints.desk}) {\n    margin-bottom: 50px;\n  }\n`;\n\nexport const CategoriesList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 28px;\n  margin-bottom: 24px;\n\n  @media screen and (min-width: ${props => props.theme.breakpoints.tab}) {\n    margin-bottom: 40px;\n    flex-direction: row;\n    flex-wrap: wrap;\n    gap: 32px;\n  }\n\n  @media screen and (min-width: ${props => props.theme.breakpoints.desk}) {\n    margin-bottom: 50px;\n    flex-wrap: nowrap;\n    gap: 14px;\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  width: 94px;\n  height: 38px;\n  background-color: ${props => props.theme.color.accent};\n  border: none;\n  color: ${props => props.theme.color.btnColor};\n  font-family: inherit;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.29;\n  border-radius: 6px;\n  margin-left: auto;\n\n  transition: ${props => props.theme.transitions.main};\n\n  &:hover,\n  &:focus {\n    background-color: ${props => props.theme.color.bgSecondary};\n    color: ${props => props.theme.color.socIconHover};\n  }\n`;\n\nexport const ButtonOtherCategory = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  width: 195px;\n  height: 46px;\n  background-color: transparent;\n  border-radius: 24px 44px;\n  border: 2px solid ${props => props.theme.color.accent};\n  color: ${props => props.theme.color.btnColorSecondary};\n  font-family: inherit;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.5;\n  margin-left: auto;\n  margin-right: auto;\n\n  transition: ${props => props.theme.transitions.main};\n\n  &:hover,\n  &:focus {\n    background-color: ${props => props.theme.color.accent};\n    color: ${props => props.theme.color.btnColor};\n  }\n\n  @media screen and (min-width: ${props => props.theme.breakpoints.tab}) {\n    width: 239px;\n    height: 61px;\n    font-size: 16px;\n  }\n`;\n\nexport const ErrorMessage = styled.p`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1;\n  letter-spacing: -0.02em;\n  letter-spacing: -0.02em;\n  color: ${props => props.theme.color.secondaryTextColor};\n  opacity: 0.5;\n  margin-bottom: 100px;\n  text-align: center;\n\n  @media screen and (min-width: ${props => props.theme.breakpoints.tab}) {\n    font-size: 24px;\n    margin-bottom: 140px;\n  }\n\n  @media screen and (min-width: ${props => props.theme.breakpoints.desk}) {\n    font-size: 44px;\n    margin-bottom: 180px;\n  }\n`;\n","import styled from 'styled-components';\nimport bgMob from '../../../img/recipe-bg-mob.png';\nimport bgMobRetina from '../../../img/recipe-bg-mob@2x.png';\nimport bgTablet from '../../../img/recipe-bg-tablet.png';\nimport bgTabletRetina from '../../../img/recipe-bg-tablet.@2x.png';\nimport bgDesktop from '../../../img/recipe-bg-desktop.jpg';\nimport bgDesktopRetina from '../../../img/recipe-bg-desktop@2x.jpg';\n\nexport const RecipePageHeroContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  background-repeat: no-repeat;\n  margin-bottom: 32px;\n  padding-top: 97px;\n  padding-left: 16px;\n  padding-right: 16px;\n  padding-bottom: 80px;\n  background-size: 100%;\n  background-image: url(${bgMob});\n\n  @media (min-device-pixel-ratio: 2),\n    (-webkit-min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${bgMobRetina});\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tab}) {\n    padding-bottom: 32px;\n    padding-left: 32px;\n    padding-right: 32px;\n    margin-bottom: 50px;\n    padding-top: 136px;\n    background-image: url(${bgTablet});\n    background-repeat: no-repeat;\n\n    @media (min-device-pixel-ratio: 2),\n      (-webkit-min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${bgTabletRetina});\n    }\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desk}) {\n    padding-top: 170px;\n    padding-left: 100px;\n    padding-right: 100px;\n    background-image: url(${bgDesktop});\n    background-repeat: no-repeat;\n\n    @media (min-device-pixel-ratio: 2),\n      (-webkit-min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${bgDesktopRetina});\n    }\n  }\n`;\n\nexport const RecipePageHeroTitle = styled.title`\n  display: block;\n  text-align: center;\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.3;\n  margin-bottom: 24px;\n  letter-spacing: -0.02em;\n  color: ${({ theme }) => theme.color.accent};\n  max-width: 330px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  overflow-y: clip;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tab}) {\n    max-width: 680px;\n    font-size: 44px;\n    margin-bottom: 24px;\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desk}) {\n    max-width: 1000px;\n  }\n`;\n\nexport const RecipePageHeroText = styled.p`\n  font-weight: 400;\n  text-align: center;\n  font-size: 12px;\n  line-height: 1.33;\n  letter-spacing: -0.02em;\n  width: 303px;\n  margin-bottom: 15px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  overflow-y: clip;\n  color: ${props => props.theme.color.userText};\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tab}) {\n    width: 506px;\n    font-size: 18px;\n    line-height: 1.33;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desk}) {\n    margin-bottom: 30px;\n    width: 656px;\n  }\n`;\nexport const RecipePageHeroCookingTime = styled.div`\n  display: flex;\n  color: #23262a;\n  height: 14px;\n  margin-top: 42px;\n  letter-spacing: -0.24px;\n  font-weight: 500;\n  font-size: 10px;\n  line-height: 1.4;\n  align-items: center;\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tab}) {\n    height: 20px;\n    margin-top: 60px;\n    font-size: 14px;\n    line-height: 20px;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desk}) {\n    margin-top: 48px;\n  }\n  & svg {\n    display: inline-block;\n    margin-right: 5px;\n    width: 14px;\n    height: 14px;\n    stroke: black;\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.tab}) {\n      width: 20px;\n      height: 20px;\n      margin-right: 10px;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const RecipeBtn = styled.button`\n  border: 1px solid ${({ theme }) => theme.color.accent};\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 10px;\n  line-height: 1.5;\n  color: ${({ theme }) => theme.color.textRights};\n  padding: 10px 18px;\n  cursor: pointer;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  background-color: transparent;\n  outline: none;\n  border-radius: 30px 80px;\n  text-align: center;\n  transition: ${({ theme }) => theme.transitions.main};\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tab}) {\n    font-size: 16px;\n    padding: 18px 44px;\n    border: 2px solid ${({ theme }) => theme.color.accent};\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desk}) {\n  }\n\n  :hover,\n  :focus {\n    transition: ${({ theme }) => theme.transitions.main};\n    background: ${({ theme }) => theme.color.accent};\n    color: ${({ theme }) => theme.color.textSecondary};\n  }\n`;\n","import { RecipeBtn } from './RecipeBtnFavorite.styled';\n\nexport const RecipeBtnFavorite = ({ onClick, text }) => {\n  return <RecipeBtn onClick={onClick}>{text}</RecipeBtn>;\n};\n","import {\n  RecipePageHeroContainer,\n  RecipePageHeroTitle,\n  RecipePageHeroText,\n  RecipePageHeroCookingTime,\n} from './RecipePageHero.styled';\nimport sprite from '../../../img/sprite.svg';\nimport { RecipeBtnFavorite } from '../RecipeBtnFavorite/RecipeBtnFavorite';\nimport { useParams } from 'react-router-dom';\nimport { selectFavorites } from 'redux/favorites/favoritesSelectors';\nimport {\n  fetchFavorites,\n  addFavorite,\n  deleteFavorite,\n} from 'redux/favorites/favoritesOperations';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport const RecipePageHero = ({ title, description, time, id }) => {\n  const dispatch = useDispatch();\n  const [btnText, setBtnText] = useState(false);\n\n  const data = useSelector(selectFavorites);\n  const { recipeId } = useParams();\n\n  useEffect(() => {\n    if (!data) {\n      dispatch(fetchFavorites());\n    }\n  }, [dispatch, data]);\n\n  function deleteFromFav() {\n    dispatch(deleteFavorite(id));\n    setBtnText(false);\n    return;\n  }\n\n  function getFavorite(recipeId) {\n    if (data) {\n      const recipe = data.some(fav => fav._id === recipeId);\n      return recipe;\n    }\n    return false;\n  }\n\n  function addToFavorite() {\n    dispatch(addFavorite(id));\n    setBtnText(true);\n    return;\n  }\n\n  return (\n    <RecipePageHeroContainer>\n      <RecipePageHeroTitle>{title}</RecipePageHeroTitle>\n      <RecipePageHeroText>{description}</RecipePageHeroText>\n      {btnText || getFavorite(recipeId) ? (\n        <RecipeBtnFavorite\n          type=\"button\"\n          text={'Remove from favorite recipes'}\n          onClick={deleteFromFav}\n        />\n      ) : (\n        <RecipeBtnFavorite\n          type=\"button\"\n          text=\"Add to favorite recipes\"\n          onClick={addToFavorite}\n        />\n      )}\n      <RecipePageHeroCookingTime>\n        <svg>\n          <use href={sprite + `#icon-clock`} />\n        </svg>\n        <span>{time + ` min`}</span>\n      </RecipePageHeroCookingTime>\n    </RecipePageHeroContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const PreparationWrapper = styled.div`\n  padding-bottom: 100px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tab}) {\n    padding-bottom: 200px;\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desk}) {\n    display: flex;\n    justify-content: space-between;\n  }\n`;\nexport const InstructionWrapper = styled.div`\n  margin-bottom: 40px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tab}) {\n    margin-bottom: 53px;\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desk}) {\n    width: 469px;\n    margin-bottom: 0;\n  }\n`;\n\nexport const InstructionTitle = styled.title`\n  display: block;\n  margin-bottom: 30px;\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1;\n  letter-spacing: -0.02em;\n  color: ${({ theme }) => theme.color.text};\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tab}) {\n    margin-bottom: 32px;\n    letter-spacing: -0.24px;\n  }\n`;\n\nexport const InstructionList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: -0.02em;\n  gap: 14px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tab}) {\n    gap: 18px;\n    font-size: 14px;\n    line-height: 1.29;\n  }\n`;\n\nexport const InstructionText = styled.li`\n  display: flex;\n  flex-direction: row;\n  overflow: hidden;\n  align-items: flex-start;\n  gap: 14px;\n\n  & span {\n    display: flex;\n    justify-content: center;\n    gap: 10px;\n    width: 21px;\n    height: 21px;\n    padding: 2px 7px 1px;\n    font-weight: 600;\n    font-size: 12px;\n    line-height: 18px;\n    color: ${({ theme }) => theme.color.textNumber};\n    background: ${({ theme }) => theme.color.accent};\n    border-radius: 100px;\n    flex: none;\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.tab}) {\n      padding: 0.5px 7px 2.5px;\n      font-size: 14px;\n      line-height: 21px;\n    }\n  }\n\n  & p {\n    padding-top: 2px;\n    color: ${({ theme }) => theme.color.textPreparation};\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.tab}) {\n    }\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.desk}) {\n    }\n  }\n`;\n\nexport const ImageWrapper = styled.div`\n  & img {\n    border-radius: 8px;\n    width: 100%;\n    height: 250px;\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.tab}) {\n      width: 433px;\n      height: 332px;\n    }\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.desk}) {\n    }\n  }\n`;\n","import {\n  ImageWrapper,\n  PreparationWrapper,\n  InstructionWrapper,\n  InstructionTitle,\n  InstructionText,\n  InstructionList,\n} from './RecipePreparation.styled';\nimport { nanoid } from 'nanoid';\nexport const RecipePreparation = ({ image, instructions, title }) => {\n  let items = [];\n  if (instructions) {\n    items = instructions\n      .split('\\r\\n')\n      .filter(elem => {\n        if (!elem) return false;\n        if (!isNaN(elem)) return false;\n        if (elem.toLowerCase().includes('step')) return false;\n        return true;\n      })\n      .map((item, index) => {\n        let slicedItem = item;\n        for (let i = 0; i < 2; i++) {\n          if (!isNaN(slicedItem[i]) || slicedItem[i] === '.') {\n            slicedItem = slicedItem.slice(i + 1);\n          }\n        }\n        return (\n          <InstructionText key={nanoid()}>\n            <span>{index + 1}</span>\n            <p>{slicedItem}</p>\n          </InstructionText>\n        );\n      });\n  }\n\n  return (\n    <PreparationWrapper>\n      <InstructionWrapper>\n        <InstructionTitle>Recipe Preparation</InstructionTitle>\n        <InstructionList>{items}</InstructionList>\n      </InstructionWrapper>\n      <ImageWrapper>\n        <img src={image} alt={title} />\n      </ImageWrapper>\n    </PreparationWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const RecipeItem = styled.li`\n  border-radius: 8px;\n  background-color: ${({ theme }) => theme.color.bgAccentEl};\n  display: flex;\n  align-items: center;\n  padding: 14px 29px 14px 14px;\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tab}) {\n    padding: 21px 58px 21px 28px;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desk}) {\n    padding: 27px 70px 27px 34px;\n  }\n`;\nexport const ImageWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  & img {\n    width: 57px;\n    height: 57px;\n    transition: ${props => props.theme.transitions.main};\n    margin-right: 12px;\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.tab}) {\n      width: 112px;\n      height: 112px;\n      margin-right: 40px;\n    }\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.desk}) {\n      width: 128px;\n      height: 128px;\n      margin-right: 66px;\n    }\n  }\n`;\nexport const CheckLabel = styled.label``;\nexport const IngTextContainer = styled.div`\n  max-width: 90px;\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tab}) {\n    max-width: 208px;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desk}) {\n    max-width: 547px;\n  }\n`;\nexport const IngName = styled.title`\n  display: block;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: -0.24px;\n  color: ${({ theme }) => theme.color.text};\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tab}) {\n    font-size: 24px;\n    line-height: -0.24px;\n    margin-bottom: 10px;\n  }\n`;\nexport const IngDescr = styled.p`\n  display: ${({ showFullDesc }) => (showFullDesc ? 'block' : 'none')};\n  font-weight: 400;\n  font-size: 8px;\n  line-height: 1.38;\n  letter-spacing: -0.24px;\n  color: ${({ theme }) => theme.color.text};\n  transition: ${props => props.theme.transitions.main};\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tab}) {\n    overflow-y: clip;\n    font-size: 24px;\n    line-height: -0.24px;\n    font-size: 12px;\n    line-height: 1.67;\n  }\n`;\nexport const IngDescrDesk = styled.p`\n  /* display: ${({ showFullDesc }) => (showFullDesc ? 'block' : 'none')}; */\n  font-weight: 400;\n  font-size: 8px;\n  line-height: 1.38;\n  letter-spacing: -0.24px;\n  color: ${({ theme }) => theme.color.text};\n  transition: ${props => props.theme.transitions.main};\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tab}) {\n    overflow-y: clip;\n    font-size: 24px;\n    line-height: -0.24px;\n    font-size: 12px;\n    line-height: 1.67;\n  }\n`;\nexport const IngNumber = styled.p`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  margin-left: auto;\n  padding: 4px;\n  min-width: 37px;\n  max-width: 47px;\n  border-radius: 4px;\n  background: ${({ theme }) => theme.color.accent};\n  font-weight: 600;\n  font-size: 10px;\n  line-height: 1.5;\n  color: ${({ theme }) => theme.color.textSecondary};\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tab}) {\n    min-width: 78px;\n    max-width: 150px;\n    font-size: 18px;\n    line-height: 1.5;\n  }\n`;\nexport const CustomCheckbox = styled.span`\n  margin-left: 28px;\n  position: relative;\n  display: inline-block;\n  width: 18px;\n  height: 18px;\n  background: transparent;\n  border: 1px solid rgba(126, 126, 126, 0.5);\n  border-radius: 4px;\n  transition: ${({ theme }) => theme.transitions.main};\n  &:hover {\n    cursor: pointer;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tab}) {\n    border: 2px solid rgba(126, 126, 126, 0.5);\n    width: 35px;\n    height: 35px;\n    margin-left: 78px;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desk}) {\n    margin-left: 151px;\n  }\n  & svg {\n    display: inline-block;\n    width: 9px;\n    height: 9px;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transition: ${({ theme }) => theme.transitions.main};\n    transform: translate(-50%, -50%) scale(0);\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.tab}) {\n      width: 18px;\n      height: 18px;\n    }\n  }\n`;\nexport const DoneCheckbox = styled.input`\n  display: none;\n  transition: ${({ theme }) => theme.transitions.main};\n  &:hover {\n    cursor: pointer;\n  }\n  &:checked + ${CustomCheckbox} svg {\n    transform: translate(-50%, -50%) scale(1);\n  }\n`;\nexport const IngDescrButton = styled.button`\n  background-color: transparent;\n  border: none;\n  padding: 4px;\n  border-radius: 4px;\n  background: ${({ theme }) => theme.color.accent};\n  color: ${({ theme }) => theme.color.textSecondary};\n  cursor: pointer;\n  margin-bottom: 10px;\n  font-size: 14px;\n  transition: ${props => props.theme.transitions.main};\n  & :focus {\n    /* text-decoration: underline; */\n    color: ${({ theme }) => theme.color.accent};\n    background: ${({ theme }) => theme.color.textSecondary};\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  RecipeItem,\n  ImageWrapper,\n  CheckLabel,\n  DoneCheckbox,\n  CustomCheckbox,\n  IngNumber,\n  IngTextContainer,\n  IngName,\n  IngDescr,\n  IngDescrButton,\n  IngDescrDesk,\n} from './RecipeInngredientsItem.styled';\nimport sprite from '../../../img/sprite.svg';\nimport MediaQuery from 'react-responsive';\nimport imgPlug from 'img/recipe-img.jpg';\nimport {\n  fetchShoppingList,\n  addToShoppingList,\n  deleteToShoppingList,\n} from 'redux/shoppingList/shoppingListOperations';\n\nexport const RecipeInngredientsItem = ({ ttl, thb, desc, measure, _id }) => {\n  const [showFullDesc, setShowFullDesc] = useState(false);\n  const dispatch = useDispatch();\n  const [isChecked, setIsChecked] = useState(false);\n  const shoppingList = useSelector(state => state.shoppingList);\n  const { items } = shoppingList;\n  /* eslint-disable react-hooks/exhaustive-deps */\n  const shoppingListId = items.shoppingList;\n  let shoppingId = [];\n  if (shoppingListId && shoppingListId.length > 0) {\n    shoppingId = shoppingListId.map(({ _id: { _id }, measure }) => ({\n      id: _id,\n      measure,\n    }));\n  }\n  const handleDescToggle = () => {\n    setShowFullDesc(!showFullDesc);\n  };\n  const measureValue = measure.trim() !== '' ? measure : '1';\n  useEffect(() => {\n    fetchShoppingList();\n    const hasItem = shoppingId.some(item => item.id === _id);\n    setIsChecked(hasItem); // set isChecked to true if it is\n  }, [dispatch, shoppingId, _id]);\n\n  const addItemHandler = event => {\n    const { checked } = event.target;\n\n    if (checked) {\n      dispatch(addToShoppingList({ _id: _id, measure: measure }));\n    } else {\n      dispatch(deleteToShoppingList({ _id: _id, measure: measure }));\n    }\n    setIsChecked(checked);\n  };\n  return (\n    <>\n      <RecipeItem>\n        <ImageWrapper>\n          {thb ? (\n            <img src={thb} alt={ttl} />\n          ) : (\n            <img src={`${imgPlug}`} alt={ttl} />\n          )}\n        </ImageWrapper>\n        <IngTextContainer>\n          <IngName>{ttl}</IngName>\n          <MediaQuery minWidth={768} maxWidth={1439}>\n            <IngDescrButton onClick={handleDescToggle}>\n              {showFullDesc ? 'Collapse' : 'Description'}\n            </IngDescrButton>\n            <IngDescr showFullDesc={showFullDesc}>{desc}</IngDescr>\n          </MediaQuery>\n          <MediaQuery minWidth={1440}>\n            <IngDescrDesk>{desc}</IngDescrDesk>\n          </MediaQuery>\n        </IngTextContainer>\n        <IngNumber>{measureValue}</IngNumber>\n        <CheckLabel>\n          <DoneCheckbox\n            type=\"checkbox\"\n            checked={isChecked}\n            onChange={addItemHandler}\n          />\n          <CustomCheckbox>\n            <svg>\n              <use href={sprite + `#icon-pick`} />\n            </svg>\n          </CustomCheckbox>\n        </CheckLabel>\n      </RecipeItem>\n    </>\n  );\n};\n","import { RecipePageHero } from 'components/RecipePage/RecipePageHero/RecipePageHero';\nimport { RecipePreparation } from 'components/RecipePage/RecipePreparation/RecipePreparation';\nimport { RecipeInngredientsItem } from 'components/RecipePage/RecipeInngredientsItem/RecipeInngredientsItem';\nimport axios from 'axios';\nimport { ErrorImageContainer } from 'components/ErrorImageContainer/ErrorImageContainer';\nimport { useEffect, useState } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  ContainerRecipe,\n  TableRecipe,\n  InngredientsList,\n} from './Recipe.styled';\nimport { Container } from 'components/Container/Container';\nimport { useParams } from 'react-router-dom';\nimport { ContainerError } from './Recipe.styled';\n\nconst Recipe = () => {\n  const [recipe, setRecipe] = useState({});\n  const [ingredientsList, setIngredientsList] = useState([]);\n  const [ingredientsMeasureList, setIngredientsMeasureList] = useState([]);\n  const { recipeId } = useParams();\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    async function getRecipe() {\n      try {\n        setLoading(true);\n        const {\n          data: { data },\n        } = await axios.get(\n          `https://soyummy-tw3y.onrender.com/api/v1/recipes/${recipeId}`\n        );\n        if (data && data.ingredients) {\n          const ing = data.ingredients;\n          const measures = ing.map(({ _id: { _id }, measure }) => ({\n            id: _id,\n            measure,\n          }));\n          setIngredientsMeasureList(measures);\n          setIngredientsList(ing.map(({ _id }) => _id));\n          setRecipe(data);\n        } else {\n          setError('Unable to retrieve recipe data');\n        }\n      } catch (error) {\n        setError(error.message);\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    getRecipe();\n  }, [recipeId]);\n\n  return (\n    <ContainerRecipe>\n      {error && !loading && (\n        <ContainerError>\n          <ErrorImageContainer title=\"Doesn't find any recipes...\" />\n        </ContainerError>\n      )}\n      {recipe && !error && !loading && <Loader /> && (\n        <>\n          <RecipePageHero\n            title={recipe.title}\n            description={recipe.description}\n            time={recipe.time}\n            id={recipeId}\n          />\n          <Container>\n            <TableRecipe>\n              <p>Ingredients</p>\n              <p>\n                Number <span>Add to list</span>\n              </p>\n            </TableRecipe>\n            <InngredientsList>\n              {ingredientsList.map(({ _id, thb, ttl, desc }, i) => {\n                const { measure } = ingredientsMeasureList[i];\n                return (\n                  <RecipeInngredientsItem\n                    key={_id}\n                    _id={_id}\n                    thb={thb}\n                    ttl={ttl}\n                    measure={measure}\n                    desc={desc}\n                  />\n                );\n              })}\n            </InngredientsList>\n\n            <RecipePreparation\n              title={recipe.title}\n              image={recipe.thumb}\n              instructions={recipe.instructions}\n            />\n          </Container>\n        </>\n      )}\n    </ContainerRecipe>\n  );\n};\n\nexport default Recipe;\n","import styled from 'styled-components';\nimport bgMob from '../../img/main-bg-leaf-mob.png';\nimport bgMobRetina from '../../img/main-bg-leaf-mob@2x.png';\nimport bgTablet from '../../img/main-bg-leaf-tablet.png';\nimport bgTabletRetina from '../../img/main-bg-leaf-tablet@2x.png';\nimport bgDesktop from '../../img/main-bg-leaf-desktop.png';\nimport bgDesktopRetina from '../../img/main-bg-leaf-desktop@2x.png';\nexport const ContainerRecipe = styled.section`\n  padding-bottom: 100px;\n  background-image: url(${bgMob});\n  background-size: 315px 487px;\n  background-repeat: no-repeat;\n  background-position: bottom -225px left 0;\n\n  @media (min-device-pixel-ratio: 2),\n    (-webkit-min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${bgMobRetina});\n  }\n\n  @media screen and (min-width: ${props => props.theme.breakpoints.tab}) {\n    background-image: url(${bgTablet});\n    background-size: 500px 790px;\n    background-repeat: no-repeat;\n    background-position: bottom -380px left 0;\n\n    @media (min-device-pixel-ratio: 2),\n      (-webkit-min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${bgTabletRetina});\n    }\n  }\n\n  @media screen and (min-width: ${props => props.theme.breakpoints.desk}) {\n    padding-bottom: 118px;\n    background-image: url(${bgDesktop});\n    background-size: 696px 1037px;\n    background-repeat: no-repeat;\n    background-position: bottom -518px left 0;\n\n    @media (min-device-pixel-ratio: 2),\n      (-webkit-min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${bgDesktopRetina});\n    }\n  }\n`;\nexport const TableRecipe = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: 8px;\n  height: 42px;\n  padding: 0 14px;\n  margin-bottom: 24px;\n  color: ${({ theme }) => theme.color.textSecondary};\n  background-color: ${({ theme }) => theme.color.accent};\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tab}) {\n    height: 58px;\n    margin-bottom: 32px;\n    padding: 0px 32px;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desk}) {\n    height: 60px;\n    padding: 0px 40px;\n    margin-bottom: 50px;\n  }\n  p {\n    font-weight: 600;\n    font-size: 10px;\n    line-height: 1.5;\n    letter-spacing: 0.03em;\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.tab}) {\n      font-size: 18px;\n      line-height: 1.5;\n    }\n  }\n  span {\n    margin-left: 16px;\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.tab}) {\n      margin-left: 38px;\n    }\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.desk}) {\n      margin-left: 109px;\n    }\n  }\n`;\nexport const InngredientsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-bottom: 50px;\n  @media screen and (min-width: 768px) {\n    gap: 24px;\n    margin-bottom: 96px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 100px;\n  }\n`;\nexport const ContainerError = styled.div`\n  padding-top: 200px;\n`;\n","export const selectIsLoading = state => state.favorites.isLoading;\n\nexport const selectError = state => state.favorites.error;\n\nexport const selectFavorites = state => state.favorites.items;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["ErrorImage","styled","props","theme","breakpoints","tab","ErrorImageContainer","title","srcSet","imageErrorDesk","imageErrorDeskRetina","media","sizes","imageErrorTab","imageErrorTabRetina","imageErrorMob","imageErrorMobRetina","src","alt","MainList","desk","TitleList","color","CategoriesList","Link","NavLink","accent","btnColor","transitions","main","bgSecondary","socIconHover","ButtonOtherCategory","btnColorSecondary","ErrorMessage","secondaryTextColor","RecipePageHeroContainer","bgMob","bgMobRetina","bgTablet","bgTabletRetina","bgDesktop","bgDesktopRetina","RecipePageHeroTitle","RecipePageHeroText","userText","RecipePageHeroCookingTime","RecipeBtn","textRights","textSecondary","RecipeBtnFavorite","onClick","text","RecipePageHero","description","time","id","dispatch","useDispatch","useState","btnText","setBtnText","data","useSelector","selectFavorites","recipeId","useParams","useEffect","fetchFavorites","some","fav","_id","getFavorite","type","deleteFavorite","addFavorite","href","sprite","PreparationWrapper","InstructionWrapper","InstructionTitle","InstructionList","InstructionText","textNumber","textPreparation","ImageWrapper","RecipePreparation","image","instructions","items","split","filter","elem","isNaN","toLowerCase","includes","map","item","index","slicedItem","i","slice","nanoid","RecipeItem","bgAccentEl","CheckLabel","IngTextContainer","IngName","IngDescr","showFullDesc","IngDescrDesk","IngNumber","CustomCheckbox","DoneCheckbox","IngDescrButton","RecipeInngredientsItem","ttl","thb","desc","measure","setShowFullDesc","isChecked","setIsChecked","shoppingListId","state","shoppingList","shoppingId","length","measureValue","trim","fetchShoppingList","hasItem","imgPlug","minWidth","maxWidth","checked","onChange","event","target","addToShoppingList","deleteToShoppingList","recipe","setRecipe","ingredientsList","setIngredientsList","ingredientsMeasureList","setIngredientsMeasureList","error","setError","loading","setLoading","axios","ingredients","ing","measures","message","console","log","getRecipe","Loader","Container","thumb","ContainerRecipe","TableRecipe","InngredientsList","ContainerError","selectIsLoading","favorites","isLoading","selectError","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}