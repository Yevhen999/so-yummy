{"version":3,"file":"static/js/911.2f4dc02e.chunk.js","mappings":"yQA+FA,UA7EkB,WAChB,OAAwBA,EAAAA,EAAAA,UAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,IACpBC,GAAOJ,EAAAA,EAAAA,IAAYK,EAAAA,KAEzBC,EAAAA,EAAAA,YAAU,WACHF,GACHP,GAASU,EAAAA,EAAAA,MAEZ,GAAE,CAACH,EAAMP,IAEV,IAAMW,GAAiB,OAAJJ,QAAI,IAAJA,OAAA,EAAAA,EAAMK,QAAS,EAAIC,KAAKC,MAAS,OAAJP,QAAI,IAAJA,OAAA,EAAAA,EAAMK,QAAS,GAAK,EAG9DG,EADU,EACYjB,EACtBkB,EAAaD,EAFH,EAGVE,EAAU,OAAGV,QAAH,IAAGA,OAAH,EAAGA,EAAMW,MAAMF,EAAYD,GAa3C,OACE,gCACGb,IAAa,SAAC,IAAD,IACbG,GACC,SAAC,UAAD,KAEA,2BACE,UAAC,IAAD,YACE,SAAC,IAAD,CAAec,MAAM,cACpBF,GAAcA,EAAWL,OAAS,GACjC,SAAC,KAAD,UACGK,EAAWG,KAAI,gBAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,MAAOH,EAAf,EAAeA,MAAOI,EAAtB,EAAsBA,KAAMC,EAA5B,EAA4BA,YAA5B,OACd,SAAC,KAAD,WACE,SAAC,IAAD,CACEF,MAAOA,GAAgBG,EACvBN,MAAK,OAAEA,QAAF,IAAEA,EAAAA,EAAS,WAChBO,GAAIL,EACJG,YAAW,OAAEA,QAAF,IAAEA,EAAAA,EAAe,iBAC5BD,KAAI,OAAEA,QAAF,IAAEA,EAAAA,EAAQ,KACdzB,KAAK,eAPEuB,EADG,OAclB,SAAC,KAAD,WACE,SAAC,IAAD,CAAqBF,MAAM,sEAG9BR,EAAa,IACZ,SAAC,IAAD,CACEA,WAAYA,EACZgB,YAAa7B,EACb8B,aA7CW,SAAAF,GACvB3B,EAAQ2B,EACT,EA4CaG,iBA1CoB,WAChC9B,GAAQ,SAAA+B,GAAS,OAAIA,EAAY,CAAhB,GAClB,EAyCaC,kBAvCoB,WAChChC,GAAQ,SAAA+B,GAAS,OAAIA,EAAY,CAAhB,GAClB,WA6CF,C,wGC7FM,IAAM1B,EAAkB,SAAA4B,GAAK,OAAIA,EAAMC,UAAU/B,SAApB,EAEvBI,EAAc,SAAA0B,GAAK,OAAIA,EAAMC,UAAU5B,KAApB,EAEnBG,EAAkB,SAAAwB,GAAK,OAAIA,EAAMC,UAAUC,KAApB,C","sources":["pages/Favorites/Favorites.jsx","redux/favorites/favoritesSelectors.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { PagesWrapper } from 'components/PagesWrapper/PagesWrapper';\nimport { Container, List, Item } from './Favorites.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { RecipeCard } from 'components/RecipeCard/RecipeCard';\nimport {\n  selectError,\n  selectFavorites,\n  selectIsLoading,\n} from 'redux/favorites/favoritesSelectors';\nimport { fetchFavorites } from 'redux/favorites/favoritesOperations';\nimport { ErrorImageContainer } from 'components/ErrorImageContainer/ErrorImageContainer';\nimport { MainPageTitle } from 'components/MainPageTitle/MainPageTitle';\nimport { Pagination } from 'components/Pagination/Pagination';\nimport placeholder from '../../img/placeholder.jpg';\nimport ErrorPage from 'pages/ErrorPage/ErrorPage';\n\nconst Favorites = () => {\n  const [page, setPage] = useState(1);\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const data = useSelector(selectFavorites);\n\n  useEffect(() => {\n    if (!data) {\n      dispatch(fetchFavorites());\n    }\n  }, [data, dispatch]);\n\n  const totalPages = data?.length > 0 ? Math.ceil(data?.length / 4) : 0;\n\n  const perPage = 4;\n  const lastIndex = perPage * page;\n  const startIndex = lastIndex - perPage;\n  const renderList = data?.slice(startIndex, lastIndex);\n  const handlePageChange = id => {\n    setPage(id);\n  };\n\n  const handlePageChangeDecrement = () => {\n    setPage(prevState => prevState + 1);\n  };\n\n  const handlePageChangeIncrement = () => {\n    setPage(prevState => prevState - 1);\n  };\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error ? (\n        <ErrorPage />\n      ) : (\n        <main>\n          <PagesWrapper>\n            <MainPageTitle title=\"Favorites\" />\n            {renderList && renderList.length > 0 ? (\n              <List>\n                {renderList.map(({ _id, thumb, title, time, description }) => (\n                  <Item key={_id}>\n                    <RecipeCard\n                      thumb={thumb ? thumb : placeholder}\n                      title={title ?? 'No title'}\n                      id={_id}\n                      description={description ?? 'No description'}\n                      time={time ?? '--'}\n                      page=\"Favorites\"\n                    />\n                  </Item>\n                ))}\n              </List>\n            ) : (\n              <Container>\n                <ErrorImageContainer title=\"You don't have recipes in favorites yet, add your first recipe!\" />\n              </Container>\n            )}\n            {totalPages > 1 && (\n              <Pagination\n                totalPages={totalPages}\n                currentPage={page}\n                onSelectPage={handlePageChange}\n                onArrowLeftClick={handlePageChangeDecrement}\n                onArrowRightClick={handlePageChangeIncrement}\n              />\n            )}\n          </PagesWrapper>\n        </main>\n      )}\n    </>\n  );\n};\n\nexport default Favorites;\n","export const selectIsLoading = state => state.favorites.isLoading;\n\nexport const selectError = state => state.favorites.error;\n\nexport const selectFavorites = state => state.favorites.items;\n"],"names":["useState","page","setPage","dispatch","useDispatch","isLoading","useSelector","selectIsLoading","error","selectError","data","selectFavorites","useEffect","fetchFavorites","totalPages","length","Math","ceil","lastIndex","startIndex","renderList","slice","title","map","_id","thumb","time","description","placeholder","id","currentPage","onSelectPage","onArrowLeftClick","prevState","onArrowRightClick","state","favorites","items"],"sourceRoot":""}